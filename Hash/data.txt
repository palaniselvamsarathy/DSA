If we have an array
and we havee millions of records our searching element is at the end
Then the iteration is too long...
Complexity - O(n)

If we are using hash map 
Complexity - O(1)

In python we don't have hash instead we have dictionary
[[[[ in Java we have hash and linkedhashmap ]]]]

prices = {
    'id':101,
    'name':'sarathy',
    'age':22,
    'salary':25000.00
}

We can use ,
def __setitem__    => add one pair
def __getitem__    => get the value
def __delitem__    => del the value
for hash functions

Collision::::::::
1. Separate Chaining:
 -> In hash function the memory randomly allocates to the index value,
 -> If multiple values using the same index , here we can use the approach called, Separate Chaining or Chaining
 instead of directly storing a value we can store it as a linkedlist or a list

2. Linear Probing:
 -> Searching for empty memory for our key value pair [if it is tries to occupies the same index]
